version: '3.8'

volumes:
  postgres_data:
  n8n_data:
  ollama_models:

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: n8n
      POSTGRES_USER: n8n
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U n8n"]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 300M
        reservations:
          memory: 200M
    
  n8n:
    image: n8nio/n8n
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_DATABASE=n8n
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=${DB_PASSWORD}
      - N8N_ENCRYPTION_KEY=${N8N_ENCRYPTION_KEY}
      - WEBHOOK_URL=${WEBHOOK_URL}
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - N8N_SECURE_COOKIE=false
      - GENERIC_TIMEZONE=America/Mexico_City
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 500M
        reservations:
          memory: 300M
    
  ollama:
    image: ollama/ollama
    volumes:
      - ollama_models:/root/.ollama
    ports:
      - "11434:11434"
    deploy:
      resources:
        limits:
          memory: 1.5G
        reservations:
          memory: 800M
    environment:
      - OLLAMA_MODELS=/root/.ollama
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/version"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    
  nginx:
    image: nginx:alpine
    ports:
      - "8090:80"
      - "8443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - n8n
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 50M
        reservations:
          memory: 30M

  # Backup automático
  backup:
    image: postgres:15-alpine
    depends_on:
      - postgres
    volumes:
      - ./backups:/backup
      - postgres_data:/var/lib/postgresql/data:ro
    environment:
      - PGPASSWORD=${DB_PASSWORD}
    command: |
      sh -c "
      while true; do
        sleep 86400  # 24 horas
        pg_dump -h postgres -U n8n -d n8n > /backup/backup_$$(date +%Y%m%d_%H%M%S).sql
        find /backup -name '*.sql' -mtime +7 -delete  # Eliminar backups > 7 días
        echo 'Backup completado: backup_$$(date +%Y%m%d_%H%M%S).sql'
      done"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 100M
        reservations:
          memory: 50M
